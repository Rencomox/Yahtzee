package com.vhscs3.yahtzee;




import java.awt.Color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private int numRolls = 0;
    private int[] diceValues = new int[5];
    private static final int n_categories = 16;
    private boolean[] categoryScored = new boolean[n_categories];
    private boolean p1True = true;
    private int roundCounter = 0;
    
    public MainFrame() {
        initComponents();
        
        dieLabel0.setBackground(Color.WHITE);
        dieLabel0.setOpaque(true);
        dieLabel1.setBackground(Color.WHITE);
        dieLabel1.setOpaque(true);
        dieLabel2.setBackground(Color.WHITE);
        dieLabel2.setOpaque(true);
        dieLabel3.setBackground(Color.WHITE);
        dieLabel3.setOpaque(true);
        dieLabel4.setBackground(Color.WHITE);
        dieLabel4.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        yahtzeeTable = new javax.swing.JTable();
        dieLabel0 = new javax.swing.JLabel();
        dieLabel1 = new javax.swing.JLabel();
        dieLabel2 = new javax.swing.JLabel();
        dieLabel3 = new javax.swing.JLabel();
        dieLabel4 = new javax.swing.JLabel();
        rollButton = new javax.swing.JButton();
        rollCounter = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        pTurn = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        yahtzeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Ones", null, null},
                {"Twos", null, null},
                {"Threes", null, null},
                {"Fours", null, null},
                {"Fives", null, null},
                {"Sixes", null, null},
                {"Sum", null, null},
                {"Bonus", null, null},
                {"Three of a kind", null, null},
                {"Four of a kind", null, null},
                {"Full House", null, null},
                {"Small Straight", null, null},
                {"Large Straight", null, null},
                {"Chance", null, null},
                {"Yahtzee", null, null},
                {"Total Score", null, null}
            },
            new String [] {
                "", "Player 1", "Player 2"
            }
        ));
        yahtzeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yahtzeeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(yahtzeeTable);

        dieLabel0.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dieLabel0.setText("?");
        dieLabel0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dieLabel0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dieLabel0MouseClicked(evt);
            }
        });

        dieLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dieLabel1.setText("?");
        dieLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dieLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dieLabel1MouseClicked(evt);
            }
        });

        dieLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dieLabel2.setText("?");
        dieLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dieLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dieLabel2MouseClicked(evt);
            }
        });

        dieLabel3.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dieLabel3.setText("?");
        dieLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dieLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dieLabel3MouseClicked(evt);
            }
        });

        dieLabel4.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dieLabel4.setText("?");
        dieLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dieLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dieLabel4MouseClicked(evt);
            }
        });

        rollButton.setText("Roll");
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        rollCounter.setText("Roll Counter: 0");

        pTurn.setText("Player Turn: 1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(pTurn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dieLabel0)
                        .addGap(18, 18, 18)
                        .addComponent(dieLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(dieLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dieLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(dieLabel4)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rollCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rollButton))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(pTurn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rollButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rollCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dieLabel0, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        int randNum = (int)(Math.random() * 6) + 1;
        if(dieLabel0.getBackground() != Color.red)
        {
            dieLabel0.setText(Integer.toString(randNum));
            diceValues[0] = randNum;
        }        
        randNum = (int)(Math.random() * 6) + 1;
        
        if(dieLabel1.getBackground() != Color.red)
        {
            dieLabel1.setText(Integer.toString(randNum));
            diceValues[1] = randNum;
        }      
        randNum = (int)(Math.random() * 6) + 1;
        
        if(dieLabel2.getBackground() != Color.red)
        {
            dieLabel2.setText(Integer.toString(randNum));
            diceValues[2] = randNum;
        }     
        randNum = (int)(Math.random() * 6) + 1;
        
        if(dieLabel3.getBackground() != Color.red)
        {
            dieLabel3.setText(Integer.toString(randNum));
            diceValues[3] = randNum;
        }      
        
        randNum = (int)(Math.random() * 6) + 1;
        
        if(dieLabel4.getBackground() != Color.red)
        {
            dieLabel4.setText(Integer.toString(randNum));
            diceValues[4] = randNum;
        }      
        numRolls++;
        rollCounter.setText("Roll Counter: "+ numRolls);
        if(numRolls == 3)
        {
            rollButton.setEnabled(false);
            rollCounter.setText("Roll Counter: no more roles");
            numRolls = 0;
        }
    }//GEN-LAST:event_rollButtonActionPerformed

    private void dieLabel0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dieLabel0MouseClicked
        if(numRolls >= 1 && numRolls < 3 && dieLabel0.getBackground() != Color.red)
        {
            dieLabel0.setBackground(Color.red);
            dieLabel0.setOpaque(true);
        }
        else if(numRolls >= 1 && numRolls < 3)
        {
            dieLabel0.setBackground(Color.white);
            dieLabel0.setOpaque(true);
        }
    }//GEN-LAST:event_dieLabel0MouseClicked

    private void dieLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dieLabel1MouseClicked
        if(numRolls >= 1 && numRolls < 3 && dieLabel1.getBackground() != Color.red)
        {
            dieLabel1.setBackground(Color.red);
            dieLabel1.setOpaque(true);
        }
        else if(numRolls >= 1 && numRolls < 3)
        {
            dieLabel1.setBackground(Color.white);
            dieLabel1.setOpaque(true);
        }
    }//GEN-LAST:event_dieLabel1MouseClicked

    private void dieLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dieLabel2MouseClicked
        if(numRolls >= 1 && numRolls < 3 && dieLabel2.getBackground() != Color.red)
        {
            dieLabel2.setBackground(Color.red);
            dieLabel2.setOpaque(true);
        }
        else if(numRolls >= 1 && numRolls < 3)
        {
            dieLabel2.setBackground(Color.white);
            dieLabel2.setOpaque(true);
        }
    }//GEN-LAST:event_dieLabel2MouseClicked

    private void dieLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dieLabel3MouseClicked
        if(numRolls >= 1 && numRolls < 3 && dieLabel3.getBackground() != Color.red)
        {
            dieLabel3.setBackground(Color.red);
            dieLabel3.setOpaque(true);
        }
        else if(numRolls >= 1 && numRolls < 3)
        {
            dieLabel3.setBackground(Color.white);
            dieLabel3.setOpaque(true);
        }
    }//GEN-LAST:event_dieLabel3MouseClicked

    private void dieLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dieLabel4MouseClicked
        if(numRolls >= 1 && numRolls < 3 && dieLabel4.getBackground() != Color.red)
        {
            dieLabel4.setBackground(Color.red);
            dieLabel4.setOpaque(true);
        }
        else if(numRolls >= 1 && numRolls < 3)
        {
            dieLabel4.setBackground(Color.white);
            dieLabel4.setOpaque(true);
        }
    }//GEN-LAST:event_dieLabel4MouseClicked

    private void yahtzeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yahtzeeTableMouseClicked
        int row = yahtzeeTable.rowAtPoint(evt.getPoint());
        int category = row +1;
        if(p1True)
        {
            if(category >= 1 && category <= 6)
            {
                int score = Yahtzee.getUpperScore(diceValues, category);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 9)
            {
                int score =Yahtzee.getThreeOfAKindScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 10)
            {
                int score =Yahtzee.getFourOfAKindScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 11)
            {
                int score =Yahtzee.getFullHouseScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 12)
            {
                int score =Yahtzee.getSmallStraightScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 13)
            {
                int score =Yahtzee.getLargeStraightScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else if(category == 14)
            {
                int score =Yahtzee.total(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            else
            {
                int score =Yahtzee.getYahtzeeScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 1);
            }
            p1True = false;
            
        }
        else
        {
            if(category >= 1 && category <= 6)
            {
                int score = Yahtzee.getUpperScore(diceValues, category);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 9)
            {
                int score =Yahtzee.getThreeOfAKindScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 10)
            {
                int score =Yahtzee.getFourOfAKindScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 11)
            {
                int score =Yahtzee.getFullHouseScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 12)
            {
                int score =Yahtzee.getSmallStraightScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 13)
            {
                int score =Yahtzee.getLargeStraightScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else if(category == 14)
            {
                int score =Yahtzee.total(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            else
            {
                int score =Yahtzee.getYahtzeeScore(diceValues);
                yahtzeeTable.setValueAt(Integer.toString(score), row, 2);
            }
            p1True = true;
        }
        if(p1True)
        {
            pTurn.setText("Player turn: 1");
        }
        else
        {
            pTurn.setText("Player turn: 2");
        }
        rollButton.setEnabled(true);
        numRolls = 0;
        dieLabel0.setBackground(Color.white);
        dieLabel0.setOpaque(true);
        dieLabel0.setText("?");
        
        dieLabel1.setBackground(Color.white);
        dieLabel1.setOpaque(true);
        dieLabel1.setText("?");
        
        dieLabel2.setBackground(Color.white);
        dieLabel2.setOpaque(true);
        dieLabel2.setText("?");
        
        dieLabel3.setBackground(Color.white);
        dieLabel3.setOpaque(true);
        dieLabel3.setText("?");
        
        dieLabel4.setBackground(Color.white);
        dieLabel4.setOpaque(true);
        dieLabel4.setText("?");
        roundCounter ++;
        if(roundCounter == 26)
        {
            int totalP1 = 0;
            for(int i = 0; i<6; i++)
            {
                totalP1 += Integer.parseInt((String) yahtzeeTable.getValueAt(i,1));
            }
            yahtzeeTable.setValueAt(Integer.toString(totalP1), 6, 1);
            if(totalP1 >= 63)
            {
                totalP1 += 35;
                yahtzeeTable.setValueAt(Integer.toString(35), 7, 1);
            }
            else
            {
                yahtzeeTable.setValueAt(Integer.toString(0), 7, 1);
            }
            for(int i = 0; i<7; i++)
            {
                totalP1 += Integer.parseInt((String) yahtzeeTable.getValueAt(i+7,1));
            }
            yahtzeeTable.setValueAt(Integer.toString(totalP1), 15, 1);
            int totalP2 = 0;
            for(int i = 0; i<6; i++)
            {
                totalP2 += Integer.parseInt((String) yahtzeeTable.getValueAt(i,1));
            }
            yahtzeeTable.setValueAt(Integer.toString(totalP2), 6, 2);
            if(totalP2 >= 63)
            {
                totalP2 += 35;
                yahtzeeTable.setValueAt(Integer.toString(35), 7, 2);
            }
            else
            {
                yahtzeeTable.setValueAt(Integer.toString(0), 7, 2);
            }
            for(int i = 0; i<7; i++)
            {
                totalP2 += Integer.parseInt((String) yahtzeeTable.getValueAt(i+7,1));
            }
            yahtzeeTable.setValueAt(Integer.toString(totalP2), 15, 2);
            if(totalP1 > totalP2)
            {
                pTurn.setText("Player 1 WINS");
            }
            else if(totalP1 == totalP2)
            {
                pTurn.setText("BOTH PLAYERS LOSE");
            }
            else
            {
                pTurn.setText("Player 2 WINS");
            }
        }
        
    }//GEN-LAST:event_yahtzeeTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dieLabel0;
    private javax.swing.JLabel dieLabel1;
    private javax.swing.JLabel dieLabel2;
    private javax.swing.JLabel dieLabel3;
    private javax.swing.JLabel dieLabel4;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel pTurn;
    private javax.swing.JButton rollButton;
    private javax.swing.JLabel rollCounter;
    private javax.swing.JTable yahtzeeTable;
    // End of variables declaration//GEN-END:variables
}
